<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="RhythmCat-Playlist">
<refmeta>
<refentrytitle role="top_of_page" id="RhythmCat-Playlist.top_of_page">Playlist</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  RHYTHMCAT Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Playlist</refname>
<refpurpose>Manage the playlists.</refpurpose>
</refnamediv>

<refsynopsisdiv id="RhythmCat-Playlist.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#include &lt;playlist.h&gt;

enum                <link linkend="RCPlist1Column">RCPlist1Column</link>;
enum                <link linkend="RCPlist2Column">RCPlist2Column</link>;
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-init">rc_plist_init</link>                       ();
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-exit">rc_plist_exit</link>                       ();
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-insert-list">rc_plist_insert_list</link>                (<parameter>const <link linkend="gchar"><type>gchar</type></link> *listname</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> index</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-insert-music">rc_plist_insert_music</link>               (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> list1_index</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> list2_index</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-list2-insert-item">rc_plist_list2_insert_item</link>          (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *title</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *artist</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *album</parameter>,
                                                         <parameter><link linkend="gint64"><type>gint64</type></link> length</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> trackno</parameter>,
                                                         <parameter><link linkend="GtkListStore"><type>GtkListStore</type></link> *store</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> list2_index</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-list2-refresh-item">rc_plist_list2_refresh_item</link>         (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *title</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *artist</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *album</parameter>,
                                                         <parameter><link linkend="gint64"><type>gint64</type></link> length</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> trackno</parameter>,
                                                         <parameter><link linkend="GtkTreeRowReference"><type>GtkTreeRowReference</type></link> *reference</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-list2-remove-item">rc_plist_list2_remove_item</link>          (<parameter><link linkend="GtkTreeRowReference"><type>GtkTreeRowReference</type></link> *reference</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-list2-mark-invalid-item">rc_plist_list2_mark_invalid_item</link>    (<parameter><link linkend="GtkTreeRowReference"><type>GtkTreeRowReference</type></link> *reference</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-remove-list">rc_plist_remove_list</link>                (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="rc-plist-get-list1-name">rc_plist_get_list1_name</link>             (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>);
<link linkend="gint"><returnvalue>gint</returnvalue></link>                <link linkend="rc-plist-get-list1-length">rc_plist_get_list1_length</link>           ();
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-set-list1-name">rc_plist_set_list1_name</link>             (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);
<link linkend="gint"><returnvalue>gint</returnvalue></link>                <link linkend="rc-plist-get-list2-length">rc_plist_get_list2_length</link>           (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-play-by-index">rc_plist_play_by_index</link>              (<parameter><link linkend="gint"><type>gint</type></link> list_index</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> music_index</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-play-by-uri">rc_plist_play_by_uri</link>                (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-play-get-index">rc_plist_play_get_index</link>             (<parameter><link linkend="gint"><type>gint</type></link> *index1</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *index2</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-stop">rc_plist_stop</link>                       ();
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-play-prev">rc_plist_play_prev</link>                  ();
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-play-next">rc_plist_play_next</link>                  (<parameter><link linkend="gboolean"><type>gboolean</type></link> flag</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-set-play-mode">rc_plist_set_play_mode</link>              (<parameter><link linkend="gint"><type>gint</type></link> repeat</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> random</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-get-play-mode">rc_plist_get_play_mode</link>              (<parameter><link linkend="gint"><type>gint</type></link> *repeat</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *random</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-load-playlist-setting">rc_plist_load_playlist_setting</link>      ();
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-save-playlist-setting">rc_plist_save_playlist_setting</link>      ();
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-build-default-list">rc_plist_build_default_list</link>         ();
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-plist-move2">rc_plist_plist_move2</link>                (<parameter><link linkend="gint"><type>gint</type></link> list_index</parameter>,
                                                         <parameter><link linkend="GtkTreePath"><type>GtkTreePath</type></link> **from_paths</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> f_length</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> to_list_index</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-save-playlist">rc_plist_save_playlist</link>              (<parameter>const <link linkend="gchar"><type>gchar</type></link> *s_filename</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> index</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-load-playlist">rc_plist_load_playlist</link>              (<parameter>const <link linkend="gchar"><type>gchar</type></link> *s_filename</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> index</parameter>);
<link linkend="GtkListStore"><returnvalue>GtkListStore</returnvalue></link> *      <link linkend="rc-plist-get-list-store">rc_plist_get_list_store</link>             (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>);
<link linkend="GtkListStore"><returnvalue>GtkListStore</returnvalue></link> *      <link linkend="rc-plist-get-list-head">rc_plist_get_list_head</link>              ();
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-list2-refresh">rc_plist_list2_refresh</link>              (<parameter><link linkend="gint"><type>gint</type></link> list1_index</parameter>);
<link linkend="gint"><returnvalue>gint</returnvalue></link>                <link linkend="rc-plist-import-job-get-length">rc_plist_import_job_get_length</link>      ();
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-import-job-cancel">rc_plist_import_job_cancel</link>          ();
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="rc-plist-load-argument">rc_plist_load_argument</link>              (<parameter><link linkend="char"><type>char</type></link> *argv[]</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="rc-plist-load-uri-from-remote">rc_plist_load_uri_from_remote</link>       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="RhythmCat-Playlist.description" role="desc">
<title role="desc.title">Description</title>
<para>
Manage the playlists in the player and control all operations
on playlists.
</para>
</refsect1>
<refsect1 id="RhythmCat-Playlist.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="RCPlist1Column" role="enum">
<title>enum RCPlist1Column</title>
<indexterm zone="RCPlist1Column"><primary>RCPlist1Column</primary></indexterm>
<programlisting>typedef enum RCPlist1Column {
    PLIST1_STATE = 0,
    PLIST1_NAME = 1,
    PLIST1_STORE = 2,
    PLIST1_LAST = 3
}RCPlist1Column;
</programlisting>
<para>
The enum type to show the columns in ListStore1.
</para><variablelist role="enum">
<varlistentry id="PLIST1-STATE:CAPS" role="constant">
<term><literal>PLIST1_STATE</literal></term>
<listitem><simpara>the state image stock
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST1-NAME:CAPS" role="constant">
<term><literal>PLIST1_NAME</literal></term>
<listitem><simpara>the list name
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST1-STORE:CAPS" role="constant">
<term><literal>PLIST1_STORE</literal></term>
<listitem><simpara>the list store of list2
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST1-LAST:CAPS" role="constant">
<term><literal>PLIST1_LAST</literal></term>
<listitem><simpara>the column number of list1
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="RCPlist2Column" role="enum">
<title>enum RCPlist2Column</title>
<indexterm zone="RCPlist2Column"><primary>RCPlist2Column</primary></indexterm>
<programlisting>typedef enum RCPlist2Column {
    PLIST2_URI = 0,
    PLIST2_STATE = 1,
    PLIST2_TITLE = 2,
    PLIST2_ORITITLE = 3,
    PLIST2_ARTIST = 4,
    PLIST2_ALBUM = 5,
    PLIST2_LENGTH = 6,
    PLIST2_TRACKNO = 7,
    PLIST2_LRCFILE = 8,
    PLIST2_ALBFILE = 9,
    PLIST2_EXTRA = 10,
    PLIST2_LAST = 11
}RCPlist2Column;
</programlisting>
<para>
The enum type to show the columns in ListStore2.
</para><variablelist role="enum">
<varlistentry id="PLIST2-URI:CAPS" role="constant">
<term><literal>PLIST2_URI</literal></term>
<listitem><simpara>the URI of the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-STATE:CAPS" role="constant">
<term><literal>PLIST2_STATE</literal></term>
<listitem><simpara>the state of the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-TITLE:CAPS" role="constant">
<term><literal>PLIST2_TITLE</literal></term>
<listitem><simpara>the title of the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-ORITITLE:CAPS" role="constant">
<term><literal>PLIST2_ORITITLE</literal></term>
<listitem><simpara>the original title of the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-ARTIST:CAPS" role="constant">
<term><literal>PLIST2_ARTIST</literal></term>
<listitem><simpara>the artist of the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-ALBUM:CAPS" role="constant">
<term><literal>PLIST2_ALBUM</literal></term>
<listitem><simpara>the album of the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-LENGTH:CAPS" role="constant">
<term><literal>PLIST2_LENGTH</literal></term>
<listitem><simpara>the time length of the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-TRACKNO:CAPS" role="constant">
<term><literal>PLIST2_TRACKNO</literal></term>
<listitem><simpara>the track number of the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-LRCFILE:CAPS" role="constant">
<term><literal>PLIST2_LRCFILE</literal></term>
<listitem><simpara>the lyric file binded to the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-ALBFILE:CAPS" role="constant">
<term><literal>PLIST2_ALBFILE</literal></term>
<listitem><simpara>the album file binded to the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-EXTRA:CAPS" role="constant">
<term><literal>PLIST2_EXTRA</literal></term>
<listitem><simpara>the extra data of the music
</simpara></listitem>
</varlistentry>
<varlistentry id="PLIST2-LAST:CAPS" role="constant">
<term><literal>PLIST2_LAST</literal></term>
<listitem><simpara>the column number of list2
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-init" role="function">
<title>rc_plist_init ()</title>
<indexterm zone="rc-plist-init"><primary>rc_plist_init</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_init                       ();</programlisting>
<para>
Initialize playlists. Can be used only once.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the initiation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-exit" role="function">
<title>rc_plist_exit ()</title>
<indexterm zone="rc-plist-exit"><primary>rc_plist_exit</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_exit                       ();</programlisting>
<para>
Free all playlists data.
</para></refsect2>
<refsect2 id="rc-plist-insert-list" role="function">
<title>rc_plist_insert_list ()</title>
<indexterm zone="rc-plist-insert-list"><primary>rc_plist_insert_list</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_insert_list                (<parameter>const <link linkend="gchar"><type>gchar</type></link> *listname</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> index</parameter>);</programlisting>
<para>
Insert a new playlist into the playlist.
</para><variablelist role="params">
<varlistentry><term><parameter>listname</parameter>&#160;:</term>
<listitem><simpara>the name of the new playlist
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>the position to insert, set to -1 to append to the last
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the insertion succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-insert-music" role="function">
<title>rc_plist_insert_music ()</title>
<indexterm zone="rc-plist-insert-music"><primary>rc_plist_insert_music</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_insert_music               (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> list1_index</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> list2_index</parameter>);</programlisting>
<para>
Import music by given URI to the playlist.
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>the URI of the music
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list1_index</parameter>&#160;:</term>
<listitem><simpara>the index of the playlists to insert to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list2_index</parameter>&#160;:</term>
<listitem><simpara>the position where the music insert to, -1 to append to
the last
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the insertion succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-list2-insert-item" role="function">
<title>rc_plist_list2_insert_item ()</title>
<indexterm zone="rc-plist-list2-insert-item"><primary>rc_plist_list2_insert_item</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_list2_insert_item          (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *title</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *artist</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *album</parameter>,
                                                         <parameter><link linkend="gint64"><type>gint64</type></link> length</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> trackno</parameter>,
                                                         <parameter><link linkend="GtkListStore"><type>GtkListStore</type></link> *store</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> list2_index</parameter>);</programlisting>
<para>
Insert music to list2 by metadata.
WARNING: This function is only used in insertion job, if you really
want to insert a music, please use <link linkend="rc-plist-insert-music"><function>rc_plist_insert_music()</function></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>the URI of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&#160;:</term>
<listitem><simpara>the title of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>artist</parameter>&#160;:</term>
<listitem><simpara>the artist of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>album</parameter>&#160;:</term>
<listitem><simpara>the album of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&#160;:</term>
<listitem><simpara>the time length of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trackno</parameter>&#160;:</term>
<listitem><simpara>the track number of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>store</parameter>&#160;:</term>
<listitem><simpara>the GtkListStore to insert to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list2_index</parameter>&#160;:</term>
<listitem><simpara>the position to insert to
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-list2-refresh-item" role="function">
<title>rc_plist_list2_refresh_item ()</title>
<indexterm zone="rc-plist-list2-refresh-item"><primary>rc_plist_list2_refresh_item</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_list2_refresh_item         (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *title</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *artist</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *album</parameter>,
                                                         <parameter><link linkend="gint64"><type>gint64</type></link> length</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> trackno</parameter>,
                                                         <parameter><link linkend="GtkTreeRowReference"><type>GtkTreeRowReference</type></link> *reference</parameter>);</programlisting>
<para>
Refresh the item in list2 by metadata.
WARNING: This function is only used in refresh job, if you really
want to refresh the playlist, please use <link linkend="rc-plist-list2-refresh"><function>rc_plist_list2_refresh()</function></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>the URI of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&#160;:</term>
<listitem><simpara>the title of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>artist</parameter>&#160;:</term>
<listitem><simpara>the artist of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>album</parameter>&#160;:</term>
<listitem><simpara>the album of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&#160;:</term>
<listitem><simpara>the time length of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trackno</parameter>&#160;:</term>
<listitem><simpara>the track number of the item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reference</parameter>&#160;:</term>
<listitem><simpara>the path reference of the item
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-list2-remove-item" role="function">
<title>rc_plist_list2_remove_item ()</title>
<indexterm zone="rc-plist-list2-remove-item"><primary>rc_plist_list2_remove_item</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_list2_remove_item          (<parameter><link linkend="GtkTreeRowReference"><type>GtkTreeRowReference</type></link> *reference</parameter>);</programlisting>
<para>
Remove invalid item in list2.
WARNING: This function is only used to remove invalid music item.
</para><variablelist role="params">
<varlistentry><term><parameter>reference</parameter>&#160;:</term>
<listitem><simpara>the path reference of the item
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-list2-mark-invalid-item" role="function">
<title>rc_plist_list2_mark_invalid_item ()</title>
<indexterm zone="rc-plist-list2-mark-invalid-item"><primary>rc_plist_list2_mark_invalid_item</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_list2_mark_invalid_item    (<parameter><link linkend="GtkTreeRowReference"><type>GtkTreeRowReference</type></link> *reference</parameter>);</programlisting>
<para>
Mark invalid item in list2.
WARNING: This function is only used to mark invalid music item.
</para><variablelist role="params">
<varlistentry><term><parameter>reference</parameter>&#160;:</term>
<listitem><simpara>the path reference of the item
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-remove-list" role="function">
<title>rc_plist_remove_list ()</title>
<indexterm zone="rc-plist-remove-list"><primary>rc_plist_remove_list</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_remove_list                (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>);</programlisting>
<para>
Remove a playlist by given index.
</para><variablelist role="params">
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>the index of the playlist to remove
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the operation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-get-list1-name" role="function">
<title>rc_plist_get_list1_name ()</title>
<indexterm zone="rc-plist-get-list1-name"><primary>rc_plist_get_list1_name</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             rc_plist_get_list1_name             (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>);</programlisting>
<para>
Return the name of the list.
</para><variablelist role="params">
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>the index number of the playlist
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The name of the list, NULL if not found, free after usage.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-get-list1-length" role="function">
<title>rc_plist_get_list1_length ()</title>
<indexterm zone="rc-plist-get-list1-length"><primary>rc_plist_get_list1_length</primary></indexterm>
<programlisting><link linkend="gint"><returnvalue>gint</returnvalue></link>                rc_plist_get_list1_length           ();</programlisting>
<para>
Return the length of playlists.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The length of playlists.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-set-list1-name" role="function">
<title>rc_plist_set_list1_name ()</title>
<indexterm zone="rc-plist-set-list1-name"><primary>rc_plist_set_list1_name</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_set_list1_name             (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>
Rename an exist playlist.
</para><variablelist role="params">
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>the index of the playlist to rename
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>the new name
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-get-list2-length" role="function">
<title>rc_plist_get_list2_length ()</title>
<indexterm zone="rc-plist-get-list2-length"><primary>rc_plist_get_list2_length</primary></indexterm>
<programlisting><link linkend="gint"><returnvalue>gint</returnvalue></link>                rc_plist_get_list2_length           (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>);</programlisting>
<para>
Return the music number in the playlist.
</para><variablelist role="params">
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>the index of the playlist
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The music number in the playlist.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-play-by-index" role="function">
<title>rc_plist_play_by_index ()</title>
<indexterm zone="rc-plist-play-by-index"><primary>rc_plist_play_by_index</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_play_by_index              (<parameter><link linkend="gint"><type>gint</type></link> list_index</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> music_index</parameter>);</programlisting>
<para>
Play music by given list1 index and list2 index.
</para><variablelist role="params">
<varlistentry><term><parameter>list_index</parameter>&#160;:</term>
<listitem><simpara>the index of the playlist
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>music_index</parameter>&#160;:</term>
<listitem><simpara>the index of the music in the playlist
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the operation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-play-by-uri" role="function">
<title>rc_plist_play_by_uri ()</title>
<indexterm zone="rc-plist-play-by-uri"><primary>rc_plist_play_by_uri</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_play_by_uri                (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);</programlisting>
<para>
Play music by given URI.
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>the URI to play
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the operation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-play-get-index" role="function">
<title>rc_plist_play_get_index ()</title>
<indexterm zone="rc-plist-play-get-index"><primary>rc_plist_play_get_index</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_play_get_index             (<parameter><link linkend="gint"><type>gint</type></link> *index1</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *index2</parameter>);</programlisting>
<para>
Get the playlist index number and the music index number of playing
music.
</para><variablelist role="params">
<varlistentry><term><parameter>index1</parameter>&#160;:</term>
<listitem><simpara>the index of the playlist
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index2</parameter>&#160;:</term>
<listitem><simpara>the index of the music in the playlist
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the indexes are set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-stop" role="function">
<title>rc_plist_stop ()</title>
<indexterm zone="rc-plist-stop"><primary>rc_plist_stop</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_stop                       ();</programlisting>
<para>
Clean the references data when the player stops.
</para></refsect2>
<refsect2 id="rc-plist-play-prev" role="function">
<title>rc_plist_play_prev ()</title>
<indexterm zone="rc-plist-play-prev"><primary>rc_plist_play_prev</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_play_prev                  ();</programlisting>
<para>
Play the previous music in the playlist.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the operation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-play-next" role="function">
<title>rc_plist_play_next ()</title>
<indexterm zone="rc-plist-play-next"><primary>rc_plist_play_next</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_play_next                  (<parameter><link linkend="gboolean"><type>gboolean</type></link> flag</parameter>);</programlisting>
<para>
Play the next music in the playlist.
</para><variablelist role="params">
<varlistentry><term><parameter>flag</parameter>&#160;:</term>
<listitem><simpara>whether the operation is produced by player, if it is TRUE,
the operation will effect by playing mode (repeat mode and random mode)
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the operation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-set-play-mode" role="function">
<title>rc_plist_set_play_mode ()</title>
<indexterm zone="rc-plist-set-play-mode"><primary>rc_plist_set_play_mode</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_set_play_mode              (<parameter><link linkend="gint"><type>gint</type></link> repeat</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> random</parameter>);</programlisting>
<para>
Set the play mode of the player.
</para><variablelist role="params">
<varlistentry><term><parameter>repeat</parameter>&#160;:</term>
<listitem><simpara>the repeat mode
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>random</parameter>&#160;:</term>
<listitem><simpara>the random mode
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-get-play-mode" role="function">
<title>rc_plist_get_play_mode ()</title>
<indexterm zone="rc-plist-get-play-mode"><primary>rc_plist_get_play_mode</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_get_play_mode              (<parameter><link linkend="gint"><type>gint</type></link> *repeat</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *random</parameter>);</programlisting>
<para>
Get the play mode of the player.
</para><variablelist role="params">
<varlistentry><term><parameter>repeat</parameter>&#160;:</term>
<listitem><simpara>return the repeat mode, can be NULL
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>random</parameter>&#160;:</term>
<listitem><simpara>return the random mdoe, can be NULL
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-load-playlist-setting" role="function">
<title>rc_plist_load_playlist_setting ()</title>
<indexterm zone="rc-plist-load-playlist-setting"><primary>rc_plist_load_playlist_setting</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_load_playlist_setting      ();</programlisting>
<para>
Load playlists from file.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the operation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-save-playlist-setting" role="function">
<title>rc_plist_save_playlist_setting ()</title>
<indexterm zone="rc-plist-save-playlist-setting"><primary>rc_plist_save_playlist_setting</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_save_playlist_setting      ();</programlisting>
<para>
Save the playlist settings to file.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the operation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-build-default-list" role="function">
<title>rc_plist_build_default_list ()</title>
<indexterm zone="rc-plist-build-default-list"><primary>rc_plist_build_default_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_build_default_list         ();</programlisting>
<para>
Make a default playlist.
</para></refsect2>
<refsect2 id="rc-plist-plist-move2" role="function">
<title>rc_plist_plist_move2 ()</title>
<indexterm zone="rc-plist-plist-move2"><primary>rc_plist_plist_move2</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_plist_move2                (<parameter><link linkend="gint"><type>gint</type></link> list_index</parameter>,
                                                         <parameter><link linkend="GtkTreePath"><type>GtkTreePath</type></link> **from_paths</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> f_length</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> to_list_index</parameter>);</programlisting>
<para>
Move item(s) in the playlist to another playlist.
</para><variablelist role="params">
<varlistentry><term><parameter>list_index</parameter>&#160;:</term>
<listitem><simpara>the index of the source playlist
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>from_paths</parameter>&#160;:</term>
<listitem><simpara>the GtkTreePaths to move
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>f_length</parameter>&#160;:</term>
<listitem><simpara>the length of the the GtkTreePaths
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>to_list_index</parameter>&#160;:</term>
<listitem><simpara>the index of the target playlist
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-save-playlist" role="function">
<title>rc_plist_save_playlist ()</title>
<indexterm zone="rc-plist-save-playlist"><primary>rc_plist_save_playlist</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_save_playlist              (<parameter>const <link linkend="gchar"><type>gchar</type></link> *s_filename</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> index</parameter>);</programlisting>
<para>
Save the playlist to a file.
</para><variablelist role="params">
<varlistentry><term><parameter>s_filename</parameter>&#160;:</term>
<listitem><simpara>the path of the playlist file
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>the index of the playlist to save
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-load-playlist" role="function">
<title>rc_plist_load_playlist ()</title>
<indexterm zone="rc-plist-load-playlist"><primary>rc_plist_load_playlist</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_load_playlist              (<parameter>const <link linkend="gchar"><type>gchar</type></link> *s_filename</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> index</parameter>);</programlisting>
<para>
Load a playlist from a playlist file.
</para><variablelist role="params">
<varlistentry><term><parameter>s_filename</parameter>&#160;:</term>
<listitem><simpara>the path of the playlist file
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>the index of the playlist to load
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-get-list-store" role="function">
<title>rc_plist_get_list_store ()</title>
<indexterm zone="rc-plist-get-list-store"><primary>rc_plist_get_list_store</primary></indexterm>
<programlisting><link linkend="GtkListStore"><returnvalue>GtkListStore</returnvalue></link> *      rc_plist_get_list_store             (<parameter><link linkend="gint"><type>gint</type></link> index</parameter>);</programlisting>
<para>
Return the GtkListStore of the playlist by given index.
</para><variablelist role="params">
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>the index of the playlist
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The GtkListStore of the playlist.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-get-list-head" role="function">
<title>rc_plist_get_list_head ()</title>
<indexterm zone="rc-plist-get-list-head"><primary>rc_plist_get_list_head</primary></indexterm>
<programlisting><link linkend="GtkListStore"><returnvalue>GtkListStore</returnvalue></link> *      rc_plist_get_list_head              ();</programlisting>
<para>
Return the GtkListStore of the playlists.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The GtkListStore of the playlists.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-list2-refresh" role="function">
<title>rc_plist_list2_refresh ()</title>
<indexterm zone="rc-plist-list2-refresh"><primary>rc_plist_list2_refresh</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_list2_refresh              (<parameter><link linkend="gint"><type>gint</type></link> list1_index</parameter>);</programlisting>
<para>
Refresh the music information in the playlist.
</para><variablelist role="params">
<varlistentry><term><parameter>list1_index</parameter>&#160;:</term>
<listitem><simpara>the index of the playlist to refresh
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the operation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-import-job-get-length" role="function">
<title>rc_plist_import_job_get_length ()</title>
<indexterm zone="rc-plist-import-job-get-length"><primary>rc_plist_import_job_get_length</primary></indexterm>
<programlisting><link linkend="gint"><returnvalue>gint</returnvalue></link>                rc_plist_import_job_get_length      ();</programlisting>
<para>
Return the remaining job length in the job queue.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The remaining job length in the job queue.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-import-job-cancel" role="function">
<title>rc_plist_import_job_cancel ()</title>
<indexterm zone="rc-plist-import-job-cancel"><primary>rc_plist_import_job_cancel</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_import_job_cancel          ();</programlisting>
<para>
Cancel all remaining jobs in the job queue.
</para></refsect2>
<refsect2 id="rc-plist-load-argument" role="function">
<title>rc_plist_load_argument ()</title>
<indexterm zone="rc-plist-load-argument"><primary>rc_plist_load_argument</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                rc_plist_load_argument              (<parameter><link linkend="char"><type>char</type></link> *argv[]</parameter>);</programlisting>
<para>
Import music from the given argument list.
</para><variablelist role="params">
<varlistentry><term><parameter>argv</parameter>&#160;:</term>
<listitem><simpara>the argument list
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="rc-plist-load-uri-from-remote" role="function">
<title>rc_plist_load_uri_from_remote ()</title>
<indexterm zone="rc-plist-load-uri-from-remote"><primary>rc_plist_load_uri_from_remote</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            rc_plist_load_uri_from_remote       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);</programlisting>
<para>
Import music from remote (e.g. D-Bus) by given URI.
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>the URI of the music to import
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Whether the operation succeeds.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
